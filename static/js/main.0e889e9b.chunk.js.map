{"version":3,"sources":["SoundPatternBuilder.js","components/MatterScene.js","components/GallerySection.js","components/ComposeSlideSection.js","components/LastSection.js","App.js","reportWebVitals.js","index.js"],"names":["SHAPES_BY_CATEGORY","박자","Array","from","length","_","i","음계","배경음","강세","CATEGORIES","PITCH_ORDER","rhythmSounds","#4284F3","#6EC1A1","#F5BC62","#FE6E3D","#EF7A88","durationSounds","pitchGroups","SoundPatternBuilder","_svgRef$current23","shapes","setShapes","useState","selectedCategory","setSelectedCategory","selectedShape","setSelectedShape","selectedColor","setSelectedColor","selectedId","setSelectedId","draggingId","setDraggingId","isPlaying","setIsPlaying","isPaused","setIsPaused","playheadX","setPlayheadX","showPitchLines","setShowPitchLines","showSaveModal","setShowSaveModal","composerName","setComposerName","svgRef","useRef","shapesRef","startTimeRef","pauseTimeRef","animationRef","activeAudios","useEffect","current","handleKeyDown","e","key","prev","filter","shape","id","window","addEventListener","removeEventListener","playSoundForShape","pitch","elapsed","type","lastPlayed","color","customColor","audio","startsWith","files","Audio","Math","floor","random","volume","group","validGroups","includes","C","D","E","F","G","A","B","C'","play","catch","push","step","timestamp","_svgRef$current","_svgRef$current2","svgWidth","clientWidth","svgHeight","clientHeight","newX","cancelAnimationFrame","forEach","shapeX","xPercent","shapeY","yPercent","abs","getPitchFromY","y","centerY","index","round","NUM_PITCH_LINES","min","max","requestAnimationFrame","React","createElement","className","ref","onMouseMove","svgRect","getBoundingClientRect","width","height","newShapes","map","offsetY","rawY","clientY","top","snappedY","getClosestLeadY","leadYs","closest","minDiff","ly","diff","clientX","left","onMouseUp","onClick","target","currentTarget","_svgRef$current3","_svgRef$current4","x1","y1","x2","y2","stroke","strokeWidth","_svgRef$current5","_svgRef$current6","x","isSelected","_svgRef$current7","_svgRef$current8","strokeDasharray","onMouseDown","stopPropagation","_svgRef$current9","_svgRef$current0","renderWavyLineShape","d","sin","fill","_svgRef$current1","_svgRef$current10","renderCurvedEmotionLine","translateY","transform","_svgRef$current11","_svgRef$current12","renderSharpBeatLine","scale","strokeLinecap","_svgRef$current13","_svgRef$current14","renderAccentBar","barHeight","_svgRef$current15","_svgRef$current16","renderDecreasingVolumeAccent","adjustedY","topY","bottomY","points","join","_svgRef$current17","_svgRef$current18","renderSwellingAccentBar","controlOffset","pathData","_svgRef$current19","_svgRef$current20","renderGrowingAccentBar","topStart","baseHeight","bottomStart","controlX","maxHeight","_svgRef$current21","_svgRef$current22","renderShrinkingAccentBar","minHeight","HITBOX_SIZE","pointerEvents","cx","cy","arguments","undefined","elements","angle","PI","cos","r","renderStarShapeFromMatter","renderHollowStarShape","renderCompactStarShape","renderDonutShape","renderSmallDonutShape","renderSmallFilledCircle","renderFatStarShape","innerDist","outerDist","renderHollowFatStarShape","renderMiniFatStarShape","sqrt","size","renderTriangleShape","renderSquareShape","renderCircleShape","renderSmallSquareShape","renderWideRectangleShape","renderHalfCircleShape","renderWideIsoscelesTriangle","renderDiamondSquareShape","renderSmallCircleShape","translateX","renderWavySvgDonutShape","renderFourPointStarShape","renderAsteriskShape","renderPointyDonutShape","radius","renderEightPointStarShape","renderSixArmAsteriskShape","baseRadius","renderGearDonutShape","renderBroadEightPointStar","barWidth","renderBarAsteriskShape","Fragment","cat","style","marginTop","addShape","newShape","uuidv4","initialShape","groups","startPlayback","s","pausePlayback","performance","now","a","pause","resumePlayback","placeholder","value","onChange","handleDownload","toPng","backgroundColor","cacheBust","embedWebFonts","then","dataUrl","download","Date","JSON","parse","localStorage","getItem","console","warn","error","err","borderRadius","marginRight","newGroup","title","decomp","Matter","Common","setDecomp","MatterScene","sceneRef","engineRef","runnerRef","hasStarted","setHasStarted","Engine","Render","World","Bodies","Body","Mouse","MouseConstraint","Events","Runner","container","engine","create","world","runner","render","element","options","innerWidth","innerHeight","wireframes","background","Object","assign","canvas","position","zIndex","run","sounds","src","createHalfCircle","segments","angleStep","vertices","translatedVertices","v","fromVertices","restitution","friction","fillStyle","donut","parts","circle","isSensor","rectangle","polygon","starParts","w","h","rect","setAngle","walls","isStatic","visible","add","mouse","mouseConstraint","constraint","stiffness","pixelRatio","mousewheel","on","event","pairs","_ref","bodyA","bodyB","body","indexOf","paused","currentTime","clickedBody","source","stop","clear","remove","handleStart","document","querySelectorAll","fontSize","fontFamily","fontWeight","opacity","transition","dummyItems","image","composer","likes","comments","GallerySection","galleryItems","setGalleryItems","sort","setSort","visibleRefs","visibleIds","setVisibleIds","clickedId","setClickedId","observer","IntersectionObserver","entries","entry","isIntersecting","dataset","threshold","observe","unobserve","sortedItems","b","display","justifyContent","item","data-id","el","String","transitionDelay","log","shapeData","alt","setTimeout","handleLike","styles","section","alignItems","overflow","scrollSnapAlign","ellipse","maxWidth","ComposeSlideSection","viewBox","rx","ry","letterSpacing","href","startOffset","textAnchor","dominantBaseline","dx","padding","margin","svg","LastSection","preserveAspectRatio","animation","transformOrigin","App","audioRef","matterRef","soundRef","slideRef","isMatterVisible","setIsMatterVisible","isSoundVisible","setIsSoundVisible","isSlideVisible","setIsSlideVisible","playSound","handleWheel","handleClick","disconnect","_ref2","_ref3","isVisible","idx","overflowY","paddingTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.0e889e9b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./soundBuilder.css\";\nimport { toPng } from \"html-to-image\";\nimport download from \"downloadjs\";\n\n\nconst SHAPES_BY_CATEGORY = {\n  박자: Array.from({ length: 9 }, (_, i) => `박자-${i + 1}`),\n  음계: Array.from({ length: 18 }, (_, i) => `음계-${i + 1}`),\n  배경음: Array.from({ length: 5 }, (_, i) => `배경음-${i + 1}`),\n  강세: Array.from({ length: 5 }, (_, i) => `강세-${i + 1}`),\n};\n\nconst CATEGORIES = [\"박자\", \"음계\", \"배경음\", \"강세\"];\nconst PITCH_ORDER = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C'\"];\nconst NUM_PITCH_LINES = 8;\nconst LINE_SPACING = 40;\nconst SNAP_THRESHOLD = 8;\nconst PLAYBACK_DURATION = 15000;\n\nconst initialShape = (xPercent, yPercent, type = \"박자-1\", size = 40) => ({\n  id: uuidv4(),\n  xPercent,\n  yPercent,\n  type,\n  size,\n  group: null,\n  pitch: \"C\",\n  lastPlayed: 0,\n  customColor: null,\n});\n\nconst rhythmSounds = {\n  \"#4284F3\": [\"/sound/rhythm/blue/r1.mp3\", \"/sound/rhythm/blue/r2.mp3\"],\n  \"#6EC1A1\": [\"/sound/rhythm/green/r4.mp3\", \"/sound/rhythm/green/r21.mp3\"],\n  \"#F5BC62\": [\"/sound/rhythm/yellow/r5.mp3\", \"/sound/rhythm/yellow/r6.mp3\"],\n  \"#FE6E3D\": [\"/sound/rhythm/orange/r7.mp3\", \"/sound/rhythm/orange/r8_01.mp3\"],\n  \"#EF7A88\": [\"/sound/rhythm/pink/r16.mp3\", \"/sound/rhythm/pink/r17.mp3\"],\n};\n\nconst durationSounds = {\n  \"#4284F3\": [\"/sound/duration/blue/d5_01.mp3\", \"/sound/duration/blue/d11_01.mp3\"],\n  \"#6EC1A1\": [\"/sound/duration/green/d1_01.mp3\", \"/sound/duration/green/d6_01.mp3\"],\n  \"#FE6E3D\": [\"/sound/duration/orange/d4_01.mp3\", \"/sound/duration/orange/d7_01.mp3\"],\n  \"#EF7A88\": [\"/sound/duration/pink/d24_01.mp3\"],\n  \"#F5BC62\": [\"/sound/duration/yellow/d2_01.mp3\", \"/sound/duration/yellow/d3_01.mp3\"],\n};\n\nconst pitchGroups = {\n  \"#4284F3\": [\"p1\", \"p11\", \"p18\", \"p19\"],\n  \"#6EC1A1\": [\"p13\", \"p16\", \"p22\", \"p29\", \"p30\"],\n  \"#FE6E3D\": [\"p3\"],\n  \"#EF7A88\": [\"p4\", \"p6\", \"p24\", \"p25\", \"p26\"],\n  \"#F5BC62\": [\"p2\", \"p5\", \"p7\", \"p8\", \"p9\", \"p12\", \"p15\", \"p23\"],\n};\n\nconst getPitchFromY = (y, svgHeight) => {\n  const centerY = svgHeight / 2;\n  const index = Math.round((y - centerY) / LINE_SPACING + NUM_PITCH_LINES / 2);\n  return PITCH_ORDER[Math.min(Math.max(index, 0), 7)];\n};\n\nconst getClosestLeadY = (y, svgHeight) => {\n  const centerY = svgHeight / 2;\n  const leadYs = Array.from({ length: NUM_PITCH_LINES }, (_, i) => centerY + (i - 3.5) * LINE_SPACING);\n  let closest = y;\n  let minDiff = SNAP_THRESHOLD;\n  for (let ly of leadYs) {\n    const diff = Math.abs(y - ly);\n    if (diff < minDiff) {\n      closest = ly;\n      minDiff = diff;\n    }\n  }\n  return closest;\n};\n\n// 🟧 Matter.js starParts 기반 도형 SVG로 구현\nconst renderStarShapeFromMatter = (cx, cy, color = \"black\", isSelected) => {\n  const elements = [];\n  const w = 4;\n  const h = 210;\n  const strokeWidth = isSelected ? 5 : 3;\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx;\n    const y1 = cy;\n    const x2 = cx + sin * (h * 0.5);\n    const y2 = cy - cos * (h * 0.5);\n    elements.push(\n      <line key={`line-${i}`} x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} strokeWidth={strokeWidth} />\n    );\n\n    elements.push(<circle key={`circle-a-${i}`} cx={x2} cy={y2} r={w / 2.8} fill={color} />);\n    elements.push(<circle key={`circle-b-${i}`} cx={cx - sin * (h * 0.5)} cy={cy + cos * (h * 0.5)} r={w / 2.8} fill={color} />);\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderHollowStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const elements = [];\n  const h = 140;\n  const strokeWidth = isSelected ? 5 : 3;\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx + sin * 40; // 중심에서 약간 떨어진 시작점\n    const y1 = cy - cos * 40;\n    const x2 = cx + sin * (h * 0.5);\n    const y2 = cy - cos * (h * 0.5);\n\n    elements.push(\n      <line\n        key={`hollow-line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderCompactStarShape = (\n  cx,\n  cy,\n  color = \"black\",\n  isSelected,\n  shapeId,\n  setSelectedId,\n  setDraggingId\n) => {\n  const elements = [];\n  const h = 110; // ✅ 박자-2보다 더 작음\n  const strokeWidth = isSelected ? 5 : 3;\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx + sin * 45; // ✅ 중심에서 더 멀리 떨어진 시작점\n    const y1 = cy - cos * 45;\n    const x2 = cx + sin * (h * 0.5);\n    const y2 = cy - cos * (h * 0.5);\n\n    elements.push(\n      <line\n        key={`compact-line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderDonutShape = (cx, cy, color = \"black\", isSelected) => {\n  const outerRadius = 90;\n  const innerRadius = 75;\n\n  return (\n    <g>\n      <circle\n        cx={cx}\n        cy={cy}\n        r={outerRadius}\n        fill={color}\n        stroke={isSelected ? \"black\" : \"none\"}\n        strokeWidth={2}\n      />\n      <circle\n        cx={cx}\n        cy={cy}\n        r={innerRadius}\n        fill=\"#F7F2EA\"\n      />\n    </g>\n  );\n};\n\nconst renderSmallDonutShape = (cx, cy, color = \"black\", isSelected) => {\n  const outerRadius = 55;\n  const innerRadius = 42;\n\n  return (\n    <g>\n      <circle\n        cx={cx}\n        cy={cy}\n        r={outerRadius}\n        fill={color}\n        stroke={isSelected ? \"black\" : \"none\"}\n        strokeWidth={2}\n      />\n      <circle\n        cx={cx}\n        cy={cy}\n        r={innerRadius}\n        fill=\"#F7F2EA\"\n      />\n    </g>\n  );\n};\n\nconst renderSmallFilledCircle = (cx, cy, color = \"black\", isSelected) => {\n  const radius = 28; // 박자-5보다 작음\n\n  return (\n    <circle\n      cx={cx}\n      cy={cy}\n      r={radius}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth={2}\n    />\n  );\n};\n\nconst renderFatStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const elements = [];\n  const w = 8; // 선 끝 원 반지름\n  const h = 190;\n  const strokeWidth = isSelected ? 22 : 20; // 선 자체가 굵음\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx;\n    const y1 = cy;\n    const x2 = cx + sin * (h * 0.5);\n    const y2 = cy - cos * (h * 0.5);\n\n    elements.push(\n      <line\n        key={`fat-line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n\n    elements.push(<circle key={`fat-circle-a-${i}`} cx={x2} cy={y2} r={w} fill={color} />);\n    elements.push(<circle key={`fat-circle-b-${i}`} cx={cx - sin * (h * 0.5)} cy={cy + cos * (h * 0.5)} r={w} fill={color} />);\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderHollowFatStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const elements = [];\n  const h = 30; // 🔸 박자-7보다 짧음\n  const strokeWidth = isSelected ? 22 : 20;\n  const radius = 8; // 선 끝 원 크기\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const innerDist = 30; // 🔸 중심으로부터 떨어진 선 시작점\n    const outerDist = innerDist + h;\n\n    const x1 = cx + sin * innerDist;\n    const y1 = cy - cos * innerDist;\n    const x2 = cx + sin * outerDist;\n    const y2 = cy - cos * outerDist;\n\n    // 굵은 선\n    elements.push(\n      <line\n        key={`hollow-fat-line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n\n    // 선 끝에 원\n    elements.push(\n      <circle key={`hollow-fat-circle-${i}`} cx={x2} cy={y2} r={radius} fill={color} />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderMiniFatStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const elements = [];\n  const h = 15;  // 🔸 선 길이: 박자-8보다 짧음\n  const innerDist = 20; // 🔸 중심으로부터 떨어진 거리: 더 가까움\n  const strokeWidth = isSelected ? 22 : 20;\n  const radius = 8; // 🔸 끝 원 크기: 작게\n\n  for (let i = 0; i < 12; i++) {\n    const angle = (i * 30 * Math.PI) / 180;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const outerDist = innerDist + h;\n\n    const x1 = cx + sin * innerDist;\n    const y1 = cy - cos * innerDist;\n    const x2 = cx + sin * outerDist;\n    const y2 = cy - cos * outerDist;\n\n    // 굵은 짧은 선\n    elements.push(\n      <line\n        key={`mini-fat-line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n\n    // 끝에 작은 원\n    elements.push(\n      <circle key={`mini-fat-circle-${i}`} cx={x2} cy={y2} r={radius} fill={color} />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderTriangleShape = (cx, cy, color = \"black\", isSelected) => {\n  const size = 45; // 삼각형 한 변 길이\n  const height = size * Math.sqrt(3) / 2;\n\n  const points = [\n    `${cx},${cy - height / 2}`, // top\n    `${cx - size / 2},${cy + height / 2}`, // bottom left\n    `${cx + size / 2},${cy + height / 2}` // bottom right\n  ].join(\" \");\n\n  return (\n    <polygon\n      points={points}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderSquareShape = (cx, cy, color = \"black\", isSelected) => {\n  const size = 40;\n  const x = cx - size / 2;\n  const y = cy - size / 2;\n\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={size}\n      height={size}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderCircleShape = (cx, cy, color = \"black\", isSelected) => {\n  const radius = 20; // 지름 40 → 사각형과 시각적 일치\n\n  return (\n    <circle\n      cx={cx}\n      cy={cy}\n      r={radius}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderSmallSquareShape = (cx, cy, color = \"black\", isSelected) => {\n  const size = 20;\n  const x = cx - size / 2;\n  const y = cy - size / 2;\n\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={size}\n      height={size}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderWideRectangleShape = (cx, cy, color = \"black\", isSelected) => {\n  const width = 65;\n  const height = 40;\n  const x = cx - width / 2;\n  const y = cy - height / 2;\n\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderHalfCircleShape = (cx, cy, color = \"black\", isSelected) => {\n  const radius = 40;\n  const d = `\n    M ${cx - radius}, ${cy}\n    A ${radius},${radius} 0 0,1 ${cx + radius},${cy}\n    L ${cx + radius}, ${cy + 1}\n    L ${cx - radius}, ${cy + 1}\n    Z\n  `;\n\n  return (\n    <path\n      d={d}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderWideIsoscelesTriangle = (cx, cy, color = \"black\", isSelected) => {\n  const width = 40;\n  const height = 25;\n\n  const points = [\n    `${cx},${cy - height / 2}`,                // top\n    `${cx - width / 2},${cy + height / 2}`,    // bottom left\n    `${cx + width / 2},${cy + height / 2}`     // bottom right\n  ].join(\" \");\n\n  return (\n    <polygon\n      points={points}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      transform={`rotate(90, ${cx}, ${cy})`} // 👉 오른쪽 90도 회전\n    />\n  );\n};\n\nconst renderDiamondSquareShape = (cx, cy, color = \"black\", isSelected) => {\n  const size = 40;\n  const x = cx - size / 2;\n  const y = cy - size / 2;\n\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={size}\n      height={size}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      transform={`rotate(45, ${cx}, ${cy})`} // 💎 중심 기준 45도 회전\n    />\n  );\n};\n\nconst renderSmallCircleShape = (cx, cy, color = \"black\", isSelected) => {\n  const radius = 12;\n\n  return (\n    <circle\n      cx={cx}\n      cy={cy}\n      r={radius}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderWavySvgDonutShape = (cx, cy, color = \"black\", isSelected) => {\n  const scale = 0.7; // 사이즈 조절 (필요에 따라)\n  const translateX = cx - 50; // 100 / 2\n  const translateY = cy - 51; // 102 / 2\n\n  return (\n    <g\n      transform={`translate(${translateX}, ${translateY}) scale(${scale})`}\n    >\n      <path\n        d=\"M17.833 19.091C22.1743 2.46616 41.4315 -5.13429 55.9569 4.04414C60.4447 6.87988 65.7085 8.23744 71.0079 7.92586C88.1606 6.91739 101.34 22.8833 97.0993 39.5341C95.7891 44.6785 96.1246 50.1042 98.0585 55.048C104.318 71.0496 93.2062 88.5175 76.06 89.6299C70.7625 89.9735 65.706 91.9692 61.6018 95.3362C48.3178 106.234 28.271 101.064 21.9146 85.1007C19.9507 80.1687 16.4902 75.9764 12.0197 73.1136C-2.4499 63.8473 -3.72758 43.1841 9.49024 32.2058C13.574 28.814 16.4917 24.2274 17.833 19.091Z\"\n        fill={color}\n        stroke={isSelected ? \"black\" : \"none\"}\n        strokeWidth=\"2\"\n      />\n      <circle\n        cx=\"50\"\n        cy=\"51\"\n        r=\"18\"\n        fill=\"#F7F2EA\"\n      />\n    </g>\n  );\n};\n\nconst renderFourPointStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const size = 30; // 전체 크기 조절용\n\n  const points = [\n    `${cx},${cy - size}`,           // top\n    `${cx + size * 0.4},${cy - size * 0.4}`,\n    `${cx + size},${cy}`,\n    `${cx + size * 0.4},${cy + size * 0.4}`,\n    `${cx},${cy + size}`,\n    `${cx - size * 0.4},${cy + size * 0.4}`,\n    `${cx - size},${cy}`,\n    `${cx - size * 0.4},${cy - size * 0.4}`\n  ].join(\" \");\n\n  return (\n    <polygon\n      points={points}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderAsteriskShape = (cx, cy, color = \"black\", isSelected) => {\n  const h = 20; // 선 길이\n  const strokeWidth = isSelected ? 20 : 18;\n  const radius = 8; // 끝 원 크기\n  const lineCount = 5;\n  const elements = [];\n\n  for (let i = 0; i < lineCount; i++) {\n    const angle = (i * 360 / lineCount) * (Math.PI / 180);\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx;\n    const y1 = cy;\n    const x2 = cx + sin * h;\n    const y2 = cy - cos * h;\n\n    elements.push(\n      <line\n        key={`line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n\n    elements.push(\n      <circle\n        key={`cap-${i}`}\n        cx={x2}\n        cy={y2}\n        r={radius}\n        fill={color}\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderPointyDonutShape = (cx, cy, color = \"black\", isSelected) => {\n  const scale = 0.7; // SVG 원본이 크므로 크기 조절\n  const translateX = cx - 52.5; // 105 / 2\n  const translateY = cy - 54;   // 108 / 2\n\n  return (\n    <g transform={`translate(${translateX}, ${translateY}) scale(${scale})`}>\n      <path\n        d=\"M31.7149 4.588C33.2855 1.18983 37.249 -0.374528 40.7171 1.03499L65.852 11.2505C66.4314 11.486 67.0397 11.6429 67.6607 11.717L94.601 14.9319C98.3182 15.3755 101.031 18.6617 100.762 22.3956L98.8136 49.457C98.7687 50.0808 98.8074 50.7078 98.9288 51.3213L104.196 77.9366C104.923 81.6089 102.636 85.2043 99.0018 86.1024L72.6627 92.6118C72.0555 92.7619 71.4712 92.9925 70.9253 93.2975L47.2403 106.532C43.9723 108.358 39.8462 107.294 37.869 104.115L23.539 81.0764C23.2087 80.5453 22.8088 80.0609 22.3499 79.6359L2.44438 61.1998C-0.30214 58.656 -0.565117 54.403 1.8471 51.5403L19.3298 30.7923C19.7327 30.3141 20.0699 29.7841 20.3323 29.2164L31.7149 4.588Z\"\n        fill={color}\n        stroke={isSelected ? \"black\" : \"none\"}\n        strokeWidth=\"2\"\n      />\n      <circle cx=\"52.5\" cy=\"54\" r=\"16\" fill=\"#F7F2EA\" />\n    </g>\n  );\n};\n\nconst renderEightPointStarShape = (cx, cy, color = \"black\", isSelected) => {\n  const outerRadius = 40;\n  const innerRadius = 20;\n  const points = [];\n\n  for (let i = 0; i < 16; i++) {\n    const angle = (i * Math.PI) / 8; // 22.5도 간격 (360 / 16)\n    const radius = i % 2 === 0 ? outerRadius : innerRadius;\n    const x = cx + Math.cos(angle) * radius;\n    const y = cy + Math.sin(angle) * radius;\n    points.push(`${x},${y}`);\n  }\n\n  return (\n    <polygon\n      points={points.join(\" \")}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderSixArmAsteriskShape = (cx, cy, color = \"black\", isSelected) => {\n  const h = 20; // 선 길이\n  const strokeWidth = isSelected ? 20 : 18;\n  const radius = 8; // 선 끝 원 크기\n  const lineCount = 6;\n\n  const elements = [];\n\n  for (let i = 0; i < lineCount; i++) {\n    const angle = (i * 360 / lineCount) * (Math.PI / 180);\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    const x1 = cx;\n    const y1 = cy;\n    const x2 = cx + sin * h;\n    const y2 = cy - cos * h;\n\n    elements.push(\n      <line\n        key={`line-${i}`}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n      />\n    );\n\n    elements.push(\n      <circle\n        key={`cap-${i}`}\n        cx={x2}\n        cy={y2}\n        r={radius}\n        fill={color}\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderGearDonutShape = (cx, cy, color = \"black\", isSelected) => {\n  const baseRadius = 20;       // 중심으로부터 돌기 배치 위치\n  const rippleRadius = 10;     // 돌기 크기\n  const rippleCount = 12;      // 꼭짓점 개수\n  const holeRadius = 15;       // 가운데 비어있는 원 크기\n\n  const elements = [];\n\n  // 외곽 돌기\n  for (let i = 0; i < rippleCount; i++) {\n    const angle = (i * 360 / rippleCount) * (Math.PI / 180);\n    const x = cx + Math.cos(angle) * baseRadius;\n    const y = cy + Math.sin(angle) * baseRadius;\n\n    elements.push(\n      <circle\n        key={`ripple-${i}`}\n        cx={x}\n        cy={y}\n        r={rippleRadius}\n        fill={color}\n      />\n    );\n  }\n\n  // 중앙 구멍\n  elements.push(\n    <circle\n      key=\"hole\"\n      cx={cx}\n      cy={cy}\n      r={holeRadius}\n      fill=\"#F7F2EA\"\n    />\n  );\n\n  // 선택 표시 테두리\n  if (isSelected) {\n    elements.push(\n      <circle\n        key=\"outline\"\n        cx={cx}\n        cy={cy}\n        r={baseRadius + rippleRadius - 2}\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth=\"2\"\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderBroadEightPointStar = (cx, cy, color = \"black\", isSelected) => {\n  const outerRadius = 42; // 더 넓게\n  const innerRadius = 30; // 깊이 차이 줄임 → 면적 넓어짐\n  const points = [];\n\n  for (let i = 0; i < 16; i++) {\n    const angle = (i * Math.PI) / 8;\n    const r = i % 2 === 0 ? outerRadius : innerRadius;\n    const x = cx + Math.cos(angle) * r;\n    const y = cy + Math.sin(angle) * r;\n    points.push(`${x},${y}`);\n  }\n\n  return (\n    <polygon\n      points={points.join(\" \")}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst renderBarAsteriskShape = (cx, cy, color = \"black\", isSelected) => {\n  const barLength = 40;\n  const barWidth = 18;\n  const armCount = 8; // ✅ 8방향으로 수정\n  const elements = [];\n\n  for (let i = 0; i < armCount; i++) {\n    const angle = (i * 360 / armCount);\n\n    const x = cx - barWidth / 2;\n    const y = cy - barLength;\n    \n    elements.push(\n      <rect\n        key={`bar-${i}`}\n        x={x}\n        y={y}\n        width={barWidth}\n        height={barLength}\n        fill={color}\n        transform={`rotate(${angle}, ${cx}, ${cy})`}\n      />\n    );\n  }\n\n  // 선택 표시용 외곽\n  if (isSelected) {\n    elements.push(\n      <circle\n        key=\"outline\"\n        cx={cx}\n        cy={cy}\n        r={barLength}\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth=\"2\"\n      />\n    );\n  }\n\n  return <g>{elements}</g>;\n};\n\nconst renderWavyLineShape = (y, svgWidth, color, isSelected, shape, setDraggingId, setSelectedId) => {\n  const amplitude = 10; // 파형 높이\n  const frequency = 0.04; // 파형 밀도\n  const step = 5; // 선 해상도\n\n  let d = `M 0 ${y}`;\n  for (let x = step; x <= svgWidth; x += step) {\n    const waveY = y + Math.sin(x * frequency) * amplitude;\n    d += ` L ${x} ${waveY}`;\n  }\n\n  return (\n    <path\n      key={shape.id}\n      d={d}\n      stroke={color}\n      strokeWidth={isSelected ? 8 : 6}\n      fill=\"none\"\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\nconst renderCurvedEmotionLine = (y, svgWidth, color, isSelected, shape, setDraggingId, setSelectedId) => {\n  // 원본 path는 viewBox 높이가 61이므로, y값을 기준으로 수직 위치 보정\n  const translateY = y - 145.5; // 61 / 2\n\n  return (\n    <g\n      key={shape.id}\n      transform={`translate(0, ${translateY}) scale(${svgWidth / 497}, 2.5)`} // 497 → 원본 너비\n    >\n      <path\n        d=\"M2 57.6559C2 57.6559 302 60.1941 316 57.6559C330 55.1177 359.27 52.9558 360.5 33.1559C361.678 14.1917 341.953 0.808148 323 2.15587C305.504 3.39998 290.266 15.6175 290.5 33.1559C290.783 54.3739 324.5 57.6559 339 57.6559C353.5 57.6559 495.5 57.6559 495.5 57.6559\"\n        stroke={color}\n        strokeWidth={isSelected ? 4 : 2.5}\n        fill=\"none\"\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          setDraggingId(shape.id);\n        }}\n        onClick={(e) => {\n          e.stopPropagation();\n          setSelectedId(shape.id);\n        }}\n      />\n    </g>\n  );\n};\n\nconst renderSharpBeatLine = (y, svgWidth, color, isSelected, shape, setDraggingId, setSelectedId) => {\n  const originalWidth = 498;\n  const lineYinSvg = 108; // SVG 안에서 기준선 위치\n  const scale = svgWidth / originalWidth;\n  const translateY = y - lineYinSvg;\n\n  return (\n    <g\n      key={shape.id}\n      transform={`translate(0, ${translateY}) scale(${scale})`}\n    >\n      <path\n        d=\"M2 38.5H22.8423C23.2415 38.5 23.6024 38.2626 23.7605 37.8961L32.5818 17.4468C33.012 16.4495 34.5 16.7567 34.5 17.8429V37.5C34.5 38.0523 34.9477 38.5 35.5 38.5H68.5H121.71C121.899 38.5 122.085 38.4461 122.245 38.3445L141.729 25.9891C142.166 25.7121 142.741 25.8139 143.057 26.2239L151.438 37.1198C151.909 37.7316 152.866 37.6022 153.157 36.8874L167.074 2.72768C167.488 1.7113 169 2.00749 169 3.10498V53.9332C169 54.9009 170.237 55.3043 170.808 54.5227L182.2 38.9105C182.389 38.6525 182.689 38.5 183.008 38.5H211.761C211.918 38.5 212.073 38.4629 212.213 38.3918L245.048 21.7367C245.713 21.3993 246.5 21.8826 246.5 22.6285V50.5858C246.5 51.4767 247.577 51.9229 248.207 51.2929L260.707 38.7929C260.895 38.6054 261.149 38.5 261.414 38.5H278.5C279.052 38.5 279.5 38.0523 279.5 37.5V15.6545C279.5 14.484 281.166 14.2664 281.466 15.3976L289.522 45.7021C289.727 46.4724 290.706 46.7053 291.236 46.1096L297.702 38.8356C297.891 38.6221 298.163 38.5 298.449 38.5H385.382C385.761 38.5 386.107 38.286 386.276 37.9472L392.181 26.1386C392.608 25.2837 393.877 25.4583 394.057 26.397L398.11 47.4732C398.268 48.2937 399.303 48.5703 399.849 47.9379L407.701 38.8464C407.891 38.6264 408.167 38.5 408.458 38.5H496.5\"\n        stroke={color}\n        strokeWidth={isSelected ? 4 : 2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          setDraggingId(shape.id);\n        }}\n        onClick={(e) => {\n          e.stopPropagation();\n          setSelectedId(shape.id);\n        }}\n      />\n    </g>\n  );\n};\n\nconst renderAccentBar = (y, svgWidth, isSelected, shape, setDraggingId, setSelectedId) => {\n  const barHeight = isSelected ? 12 : 10;\n  const offset = 200; // 👈 여기 값 조정\n  const color = \"#222\";\n\n  return (\n    <rect\n      key={shape.id}\n      x={0}\n      y={y - barHeight / 2 + offset}\n      width={svgWidth}\n      height={barHeight}\n      fill={color}\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth={2}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\nconst renderDecreasingVolumeAccent = (y, svgWidth, isSelected, shape, setDraggingId, setSelectedId) => {\n  const height = 30;\n  const offset = 200; // 원하는 만큼 내려주기\n  const adjustedY = y + offset;\n\n  const topY = adjustedY - height / 2;\n  const bottomY = adjustedY + height / 2;\n\n  const points = [\n    `0,${topY}`,\n    `${svgWidth},${topY + 15}`,\n    `${svgWidth},${bottomY - 15}`,\n    `0,${bottomY}`\n  ].join(\" \");\n\n  return (\n    <polygon\n      key={shape.id}\n      points={points}\n      fill=\"#333\"\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\nconst renderSwellingAccentBar = (y, svgWidth, isSelected, shape, setDraggingId, setSelectedId) => {\n  const height = 40;\n  const offset = 200;\n  const adjustedY = y + offset;\n\n  const topY = adjustedY - height / 2;\n  const bottomY = adjustedY + height / 2;\n\n  const controlOffset = svgWidth / 4; // 곡선 중앙을 향해 당기는 값\n\n  const pathData = `\n    M 0 ${topY}\n    C ${controlOffset} ${topY + 20}, ${svgWidth - controlOffset} ${topY + 20}, ${svgWidth} ${topY}\n    L ${svgWidth} ${bottomY}\n    C ${svgWidth - controlOffset} ${bottomY - 20}, ${controlOffset} ${bottomY - 20}, 0 ${bottomY}\n    Z\n  `;\n\n  return (\n    <path\n      key={shape.id}\n      d={pathData}\n      fill=\"#222\"\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\nconst renderGrowingAccentBar = (y, svgWidth, isSelected, shape, setDraggingId, setSelectedId) => {\n  const baseHeight = 1;    // 시작 두께\n  const maxHeight = 40;     // 끝에서의 최대 두께\n  const offset = 200;\n  const adjustedY = y + offset;\n\n  const topStart = adjustedY - baseHeight / 2;\n  const bottomStart = adjustedY + baseHeight / 2;\n\n  const topEnd = adjustedY - maxHeight / 2;\n  const bottomEnd = adjustedY + maxHeight / 2;\n\n  const controlX = svgWidth * 0.7;\n\n  const pathData = `\n    M 0 ${topStart}\n    Q ${controlX} ${topStart}, ${svgWidth} ${topEnd}\n    L ${svgWidth} ${bottomEnd}\n    Q ${controlX} ${bottomStart}, 0 ${bottomStart}\n    Z\n  `;\n\n  return (\n    <path\n      key={shape.id}\n      d={pathData}\n      fill=\"#222\"\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\nconst renderShrinkingAccentBar = (y, svgWidth, isSelected, shape, setDraggingId, setSelectedId) => {\n  const baseHeight = 40;   // 시작 두께 (왼쪽)\n  const minHeight = 1;    // 끝 두께 (오른쪽)\n  const offset = 200;\n  const adjustedY = y + offset;\n\n  const topStart = adjustedY - baseHeight / 2;\n  const bottomStart = adjustedY + baseHeight / 2;\n\n  const topEnd = adjustedY - minHeight / 2;\n  const bottomEnd = adjustedY + minHeight / 2;\n\n  const controlX = svgWidth * 0.3;\n\n  const pathData = `\n    M 0 ${topStart}\n    Q ${controlX} ${topStart}, ${svgWidth} ${topEnd}\n    L ${svgWidth} ${bottomEnd}\n    Q ${controlX} ${bottomStart}, 0 ${bottomStart}\n    Z\n  `;\n\n  return (\n    <path\n      key={shape.id}\n      d={pathData}\n      fill=\"#222\"\n      stroke={isSelected ? \"black\" : \"none\"}\n      strokeWidth=\"2\"\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n};\n\n\n\nconst SoundPatternBuilder = () => {\n  const [shapes, setShapes] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedShape, setSelectedShape] = useState(null);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n  const [draggingId, setDraggingId] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [playheadX, setPlayheadX] = useState(0);\n  const [showPitchLines, setShowPitchLines] = useState(true);\n  const [showSaveModal, setShowSaveModal] = useState(false);\nconst [composerName, setComposerName] = useState(\"\");\n\n\n  const svgRef = useRef(null);\n  const shapesRef = useRef(shapes);\n  const startTimeRef = useRef(null);\n  const pauseTimeRef = useRef(null);\n  const animationRef = useRef(null);\n  const activeAudios = useRef([]);\n\n// 🔼 컴포넌트 상단에 함수 정의 추가\nconst handleSaveToGallery = () => {\n  if (!svgRef.current) return;\n\n  toPng(svgRef.current, {\n    backgroundColor: \"#F7F2EA\",\n    cacheBust: true,\n    embedWebFonts: false, // 🔧 웹폰트 오류 방지\n  })\n    .then((dataUrl) => {\n      // 이제는 단순히 다운로드만 수행\n      download(dataUrl, \"my-score.png\");\n    })\n    .catch((err) => {\n      console.error(\"이미지 다운로드 실패:\", err);\n    });\n};\n\n\n  useEffect(() => {\n    shapesRef.current = shapes;\n  }, [shapes]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if ((e.key === \"Delete\" || e.key === \"Backspace\") && selectedId) {\n        setShapes(prev => prev.filter(shape => shape.id !== selectedId));\n        setSelectedId(null);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [selectedId]);\n\n  const playSoundForShape = (shape, pitch, elapsed) => {\n    if (!shape || !shape.type) return;\n    if (elapsed - shape.lastPlayed < 300) return;\n    shape.lastPlayed = elapsed;\n\n    const color = shape.customColor;\n    let audio = null;\n\n    if (shape.type.startsWith(\"배경음\")) {\n      const files = durationSounds[color];\n      if (!files) return;\n      audio = new Audio(files[Math.floor(Math.random() * files.length)]);\n      audio.volume = 0.5;\n    } else if (shape.type.startsWith(\"음계\")) {\n      const group = shape.group;\n      if (!group || !pitch) return;\n      const validGroups = pitchGroups[color];\n      if (!validGroups?.includes(group)) return;\n\n      const folder = color === \"#4284F3\" ? \"blue\"\n        : color === \"#6EC1A1\" ? \"green\"\n        : color === \"#F5BC62\" ? \"yellow\"\n        : color === \"#FE6E3D\" ? \"orange\"\n        : \"pink\";\n\n      const pitchMap = {\n        \"C\": \"C\", \"D\": \"D\", \"E\": \"E\", \"F\": \"F\", \"G\": \"G\", \"A\": \"A\", \"B\": \"B\", \"C'\": \"Cprime\"\n      };\n      const safePitch = pitchMap[pitch];\n      const path = `/sound/pitch/${folder}/${group}/${group}_${safePitch}.mp3`;\n      audio = new Audio(path);\n      audio.volume = 0.7;\n    } else if (shape.type.startsWith(\"박자\")) {\n      const files = rhythmSounds[color];\n      if (!files) return;\n      audio = new Audio(files[Math.floor(Math.random() * files.length)]);\n      audio.volume = 0.4;\n    }\n\n    if (audio) {\n      audio.play().catch(() => {});\n      activeAudios.current.push(audio);\n    }\n  };\n\n  const step = (timestamp) => {\n    if (!isPlaying || isPaused) return;\n    const svgWidth = svgRef.current?.clientWidth || 800;\n    const svgHeight = svgRef.current?.clientHeight || 800;\n\n    if (!startTimeRef.current) startTimeRef.current = timestamp - (pauseTimeRef.current || 0);\n    const elapsed = timestamp - startTimeRef.current;\n    const newX = (elapsed / PLAYBACK_DURATION) * svgWidth;\n\n    if (newX > svgWidth) {\n      setIsPlaying(false);\n      setPlayheadX(0);\n      startTimeRef.current = null;\n      pauseTimeRef.current = null;\n      cancelAnimationFrame(animationRef.current);\n      return;\n    }\n\n    setPlayheadX(newX);\n\n    shapesRef.current.forEach((shape) => {\n      const shapeX = (shape.xPercent / 100) * svgWidth;\n      const shapeY = (shape.yPercent / 100) * svgHeight;\n\n      if (shape.type.startsWith(\"배경음\")) {\n        if (shape.lastPlayed === 0) {\n          playSoundForShape(shape, null, elapsed);\n        }\n      } else {\n        if (Math.abs(shapeX - newX) < 10) {\n          const pitch = shape.type.startsWith(\"음계\") ? getPitchFromY(shapeY, svgHeight) : null;\n          playSoundForShape(shape, pitch, elapsed);\n        }\n      }\n    });\n\n    animationRef.current = requestAnimationFrame(step);\n  };\n\n  const startPlayback = () => {\n    shapesRef.current.forEach((s) => (s.lastPlayed = 0));\n    setIsPlaying(true);\n    setIsPaused(false);\n    setPlayheadX(0);\n    startTimeRef.current = null;\n    pauseTimeRef.current = null;\n    activeAudios.current = [];\n    cancelAnimationFrame(animationRef.current);\n    animationRef.current = requestAnimationFrame(step);\n  };\n\n  const pausePlayback = () => {\n    if (isPlaying && !isPaused) {\n      setIsPaused(true);\n      pauseTimeRef.current = performance.now() - startTimeRef.current;\n      cancelAnimationFrame(animationRef.current);\n      activeAudios.current.forEach((a) => a.pause());\n      activeAudios.current = [];\n    }\n  };\n\n  const resumePlayback = () => {\n    if (isPlaying && isPaused) {\n      setIsPaused(false);\n      animationRef.current = requestAnimationFrame(step);\n    }\n  };\n\n  const addShape = () => {\n    if (!selectedShape || !selectedCategory) return;\n    const newShape = initialShape(20, 50, selectedShape);\n    if (selectedCategory === \"음계\") {\n      const groups = pitchGroups[selectedColor];\n      if (groups?.length > 0) newShape.group = groups[Math.floor(Math.random() * groups.length)];\n    }\n    newShape.customColor = selectedColor;\n    setShapes([...shapesRef.current, newShape]);\n  };\n\n  const handleMouseMove = (e) => {\n  const svgRect = svgRef.current.getBoundingClientRect();\n  const svgWidth = svgRect.width;\n  const svgHeight = svgRect.height;\n\n  if (draggingId) {\n    const newShapes = shapesRef.current.map((shape) => {\n      if (shape.id === draggingId) {\n        const offsetY = shape.type.startsWith(\"강세\") ? 200 : 0;\n        const rawY = ((e.clientY - svgRect.top - offsetY) / svgHeight) * svgHeight;\n        const snappedY = shape.type.startsWith(\"음계\") ? getClosestLeadY(rawY, svgHeight) : rawY;\n\n        return {\n          ...shape,\n          xPercent: ((e.clientX - svgRect.left) / svgWidth) * 100,\n          yPercent: (snappedY / svgHeight) * 100,\n        };\n      }\n      return shape;\n    });\n    setShapes(newShapes);\n  }\n};\n\nconst handleDownload = () => {\n  if (!svgRef.current) return;\n\n  toPng(svgRef.current, {\n    backgroundColor: \"#F7F2EA\",  // SVG 배경 흰색\n    cacheBust: true,\n    embedWebFonts: false\n  })\n    .then((dataUrl) => {\n      download(dataUrl, \"my-score.png\");\n\n      // 👉 이미지 다운로드 후 로컬 저장용 데이터 생성\n      const item = {\n        id: uuidv4(),\n        image: dataUrl,\n        composer: composerName || \"익명\",\n        likes: 0,\n        comments: [],\n        shapeData: shapesRef.current,\n        createdAt: Date.now(),\n      };\n\n      // 👉 저장 기능 임시 비활성화 (QuotaExceededError 방지)\n      try {\n        const prev = JSON.parse(localStorage.getItem(\"galleryItems\") || \"[]\");\n        // localStorage.setItem(\"galleryItems\", JSON.stringify([item, ...prev]));\n        console.warn(\"🛑 localStorage 저장은 현재 비활성화됨 (용량 초과 방지)\");\n      } catch (e) {\n        console.error(\"갤러리 저장 실패:\", e);\n      }\n    })\n    .catch((err) => {\n      console.error(\"이미지 다운로드 또는 저장 실패:\", err);\n    });\n};\n\n\n\n\n\n  return (\n    <section className=\"builder-section\">\n      <div className=\"builder-canvas\">\n        <svg\n          ref={svgRef}\n          className=\"builder-svg\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={() => setDraggingId(null)}\n          onClick={(e) => {\n            if (e.target === e.currentTarget) setSelectedId(null);\n          }}\n        >\n          {showPitchLines &&\n            Array.from({ length: NUM_PITCH_LINES }).map((_, i) => {\n              const svgHeight = svgRef.current?.clientHeight || 800;\n              const svgWidth = svgRef.current?.clientWidth || 800;\n              const centerY = svgHeight / 2;\n              const y = centerY + (i - 3.5) * LINE_SPACING;\n              return <line key={i} x1={0} y1={y} x2={svgWidth} y2={y} stroke=\"red\" strokeWidth=\"1\" />;\n            })}\n\n          {shapes.map((shape) => {\n            const svgWidth = svgRef.current?.clientWidth || 800;\n            const svgHeight = svgRef.current?.clientHeight || 800;\n            const x = (shape.xPercent / 100) * svgWidth;\n            const y = (shape.yPercent / 100) * svgHeight;\n            const isSelected = selectedId === shape.id;\n\n            if (shape.type === \"배경음-1\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return (\n    <line\n      key={shape.id}\n      x1={0}\n      y1={y}\n      x2={svgWidth}\n      y2={y}\n      stroke={shape.customColor || \"skyblue\"}\n      strokeWidth={isSelected ? 8 : 6}\n      strokeDasharray=\"12 8\" // 점선 처리\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    />\n  );\n}\n\nif (shape.type === \"배경음-3\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderWavyLineShape(\n    y,\n    svgWidth,\n    shape.customColor || \"skyblue\",\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"배경음-4\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderCurvedEmotionLine(\n    y,\n    svgWidth,\n    shape.customColor || \"skyblue\",\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"배경음-5\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderSharpBeatLine(\n    y,\n    svgWidth,\n    shape.customColor || \"skyblue\",\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\n\n\n            if (shape.type.startsWith(\"배경음\")) {\n              return (\n                <line\n                  key={shape.id}\n                  x1={0}\n                  y1={y}\n                  x2={svgWidth}\n                  y2={y}\n                  stroke={shape.customColor || \"skyblue\"}\n                  strokeWidth={isSelected ? 8 : 6}\n                  onMouseDown={(e) => {\n                    e.stopPropagation();\n                    setDraggingId(shape.id);\n                  }}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setSelectedId(shape.id);\n                  }}\n                />\n              );\n            }\n\n            if (shape.type === \"강세-1\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderAccentBar(\n    y,\n    svgWidth,\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"강세-2\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderDecreasingVolumeAccent(\n    y,\n    svgWidth,\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"강세-3\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderSwellingAccentBar(\n    y,\n    svgWidth,\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"강세-4\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderGrowingAccentBar(\n    y,\n    svgWidth,\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\nif (shape.type === \"강세-5\") {\n  const svgWidth = svgRef.current?.clientWidth || 800;\n  const svgHeight = svgRef.current?.clientHeight || 800;\n  const y = (shape.yPercent / 100) * svgHeight;\n  const isSelected = selectedId === shape.id;\n\n  return renderShrinkingAccentBar(\n    y,\n    svgWidth,\n    isSelected,\n    shape,\n    setDraggingId,\n    setSelectedId\n  );\n}\n\n\n\nif (shape.type === \"박자-1\") {\n  const HITBOX_SIZE = 24;\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      <rect\n        x={x - HITBOX_SIZE / 2}\n        y={y - HITBOX_SIZE / 2}\n        width={HITBOX_SIZE}\n        height={HITBOX_SIZE}\n        fill=\"transparent\"\n        pointerEvents=\"all\"\n      />\n      {renderStarShapeFromMatter(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-2\") {\n  const HITBOX_SIZE = 24;\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      <rect\n        x={x - HITBOX_SIZE / 2}\n        y={y - HITBOX_SIZE / 2}\n        width={HITBOX_SIZE}\n        height={HITBOX_SIZE}\n        fill=\"transparent\"\n        pointerEvents=\"all\"\n      />\n      {renderHollowStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-3\") {\n  const HITBOX_SIZE = 24;\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      <rect\n        x={x - HITBOX_SIZE / 2}\n        y={y - HITBOX_SIZE / 2}\n        width={HITBOX_SIZE}\n        height={HITBOX_SIZE}\n        fill=\"transparent\"\n        pointerEvents=\"all\"\n      />\n      {renderCompactStarShape(\n        x,\n        y,\n        shape.customColor || \"black\",\n        isSelected,\n        shape.id,\n        setSelectedId,\n        setDraggingId\n      )}\n    </g>\n  );\n}\n\n\nif (shape.type === \"박자-4\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderDonutShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-5\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSmallDonutShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-6\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSmallFilledCircle(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-7\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderFatStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-8\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderHollowFatStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"박자-9\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderMiniFatStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-1\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderTriangleShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-2\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSquareShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-3\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderCircleShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-4\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSmallSquareShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-5\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderWideRectangleShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-6\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderHalfCircleShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-7\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderWideIsoscelesTriangle(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-8\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderDiamondSquareShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-9\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSmallCircleShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-10\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderWavySvgDonutShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-11\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderFourPointStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-12\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderAsteriskShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-13\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderPointyDonutShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-14\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderEightPointStarShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-15\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderSixArmAsteriskShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-16\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderGearDonutShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-17\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderBroadEightPointStar(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\nif (shape.type === \"음계-18\") {\n  return (\n    <g\n      key={shape.id}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        setDraggingId(shape.id);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        setSelectedId(shape.id);\n      }}\n    >\n      {renderBarAsteriskShape(x, y, shape.customColor || \"black\", isSelected)}\n    </g>\n  );\n}\n\n\n\n\n            return (\n              <circle\n                key={shape.id}\n                cx={x}\n                cy={y}\n                r=\"12\"\n                fill={shape.customColor || \"skyblue\"}\n                stroke={isSelected ? \"black\" : \"none\"}\n                strokeWidth=\"2\"\n                onMouseDown={(e) => {\n                  e.stopPropagation();\n                  setDraggingId(shape.id);\n                }}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setSelectedId(shape.id);\n                }}\n              />\n            );\n          })}\n\n          {isPlaying && (\n            <line\n              x1={playheadX}\n              y1={0}\n              x2={playheadX}\n              y2={svgRef.current?.clientHeight || 800}\n              stroke=\"red\"\n              strokeWidth={2}\n            />\n          )}\n        </svg>\n      </div>\n\n      <div className=\"builder-controls\">\n        {!selectedCategory ? (\n          <div>\n            {CATEGORIES.map((cat) => (\n              <button key={cat} onClick={() => { setSelectedCategory(cat); setSelectedShape(null); }}>{cat}</button>\n            ))}\n          </div>\n        ) : (\n          <>\n            <div>\n              {SHAPES_BY_CATEGORY[selectedCategory].map((shape) => (\n                <button key={shape} onClick={() => setSelectedShape(shape)}>{shape}</button>\n              ))}\n            </div>\n            <button onClick={() => setSelectedCategory(null)}>← 카테고리로 돌아가기</button>\n          </>\n        )}\n\n        <div style={{ marginTop: 10 }}>\n          <button onClick={addShape}>Add Shape</button>\n          <button onClick={startPlayback}>▶</button>\n          <button onClick={pausePlayback}>⏸</button>\n          <button onClick={resumePlayback}>⏵</button>\n          <button onClick={() => setShowSaveModal(true)}>저장하기</button>\n\n        </div>\n\n{showSaveModal && (\n  <div className=\"modal-overlay\" onClick={() => setShowSaveModal(false)}>\n    <div className=\"save-modal\" onClick={(e) => e.stopPropagation()}>\n      <h3>저장 방법 선택</h3>\n      <input\n        type=\"text\"\n        placeholder=\"작곡가 이름 입력\"\n        value={composerName}\n        onChange={(e) => setComposerName(e.target.value)}\n      />\n      <button onClick={handleDownload}>다운로드</button>\n      <button onClick={() => {\n        handleSaveToGallery(composerName);\n        setShowSaveModal(false);\n      }}>갤러리에 저장</button>\n      <button onClick={() => setShowSaveModal(false)}>취소</button>\n    </div>\n  </div>\n)}\n\n\n\n        \n\n        <div style={{ marginTop: 10 }}>\n          {[\"#FE6E3D\", \"#6EC1A1\", \"#F5BC62\", \"#4284F3\", \"#EF7A88\"].map((color) => (\n            <button\n              key={color}\n              style={{ backgroundColor: color, width: 24, height: 24, borderRadius: \"50%\", marginRight: 6 }}\n              onClick={(e) => {\n                e.stopPropagation();\n                setSelectedColor(color);\n                setShapes(prev =>\n                  prev.map(shape => {\n                    if (shape.id === selectedId) {\n                      const groups = pitchGroups[color];\n                      const newGroup = groups?.length > 0\n                        ? groups[Math.floor(Math.random() * groups.length)]\n                        : shape.group;\n                      return { ...shape, customColor: color, group: newGroup };\n                    }\n                    return shape;\n                  })\n                );\n              }}\n              title={color}\n            />\n          ))}\n        </div>\n\n        <div style={{ marginTop: 10 }}>\n          <button onClick={() => setShowPitchLines(!showPitchLines)}>\n            리드줄 {showPitchLines ? \"끄기\" : \"보이기\"}\n          </button>\n        </div>\n      </div>\n    </section>\n\n    \n  );\n};\n\nexport default SoundPatternBuilder;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Matter from 'matter-js';\nimport * as decomp from 'poly-decomp';\n\nif (typeof window !== 'undefined') {\n  window.decomp = decomp;\n  Matter.Common.setDecomp(decomp);\n}\n\nconst MatterScene = () => {\n  const sceneRef = useRef(null);\n  const engineRef = useRef(null);\n  const runnerRef = useRef(null);\n  const [hasStarted, setHasStarted] = useState(false);\n\n  useEffect(() => {\n    const {\n      Engine,\n      Render,\n      World,\n      Bodies,\n      Body,\n      Mouse,\n      MouseConstraint,\n      Events,\n      Runner,\n    } = Matter;\n\n    const container = sceneRef.current;\n    const engine = Engine.create();\n    const world = engine.world;\n    const runner = Runner.create();\n    engineRef.current = engine;\n    runnerRef.current = runner;\n\n    const render = Render.create({\n      element: container,\n      engine,\n      options: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        wireframes: false,\n        background: '#F7F2EA',\n      },\n    });\n\n    Object.assign(render.canvas.style, {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      zIndex: '0',\n      pointerEvents: 'auto',\n    });\n\n    Render.run(render); // ⚠️ Runner는 아직 실행하지 않음\n\n    const soundPaths = [\n      '/sound/for_site/for_home/Crystal_Ping.mp3',\n      '/sound/for_site/for_home/Glass_Tinkle.mp3',\n      '/sound/for_site/for_home/Metallic_Clink.mp3',\n      '/sound/for_site/for_home/Muted_Xylo_Tap_3.mp3',\n      '/sound/for_site/for_home/Paper_Snap.mp3',\n      '/sound/for_site/for_home/Piano_High_Key.mp3',\n      '/sound/for_site/for_home/Pop.mp3',\n      '/sound/for_site/for_home/Soft_Harp_Pluck.mp3',\n      '/sound/for_site/for_home/Tiny_Bell_Ding.mp3',\n      '/sound/for_site/for_home/Wood_Knock.mp3',\n    ];\n    const sounds = soundPaths.map((src) => new Audio(src));\n\n    const shapes = [];\n\n    const createHalfCircle = (x, y, radius, segments, color) => {\n      const angleStep = Math.PI / segments;\n      const vertices = [{ x: 0, y: 0 }];\n      for (let i = 0; i <= segments; i++) {\n        const angle = Math.PI - i * angleStep;\n        vertices.push({ x: radius * Math.cos(angle), y: radius * Math.sin(angle) });\n      }\n      const translatedVertices = vertices.map((v) => ({ x: v.x + x, y: v.y + y }));\n      return Bodies.fromVertices(x, y, [translatedVertices], {\n        restitution: 0.7,\n        friction: 0.3,\n        render: { fillStyle: color },\n      }, true);\n    };\n\n    shapes.push(createHalfCircle(600, -300, 200, 40, '#F5BC62'));\n\n    const donut = Body.create({\n      parts: [\n        Bodies.circle(900, -300, 60, {\n          restitution: 0.7,\n          friction: 0.3,\n          render: { fillStyle: '#F5BC62' },\n        }),\n        Bodies.circle(900, -300, 30, {\n          isSensor: true,\n          render: { fillStyle: '#F7F2EA' },\n        }),\n      ],\n    });\n    shapes.push(donut);\n\n    shapes.push(Bodies.rectangle(400, -300, 120, 420, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#4284F3' } }));\n    shapes.push(Bodies.polygon(800, -300, 3, 80, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#6EC1A1' } }));\n    shapes.push(Bodies.rectangle(1000, -300, 98, 40, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#EF7A88' } }));\n    shapes.push(Bodies.circle(1000, -300, 43.5, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#FE6E3D' } }));\n    shapes.push(Bodies.circle(1000, -300, 82, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#EF7A88' } }));\n    shapes.push(Bodies.rectangle(1000, -300, 64, 66, { restitution: 0.7, friction: 0.3, render: { fillStyle: '#6EC1A1' } }));\n\n    const starParts = (cx, cy, w, h, color) => {\n      const parts = [];\n      for (let i = 0; i < 12; i++) {\n        const angle = (i * 30 * Math.PI) / 180;\n        const rect = Bodies.rectangle(cx, cy, w, h, { render: { fillStyle: color } });\n        Body.setAngle(rect, angle);\n        parts.push(rect);\n        parts.push(\n          Bodies.circle(cx + Math.sin(angle) * h / 2, cy - Math.cos(angle) * h / 2, w / 2, { render: { fillStyle: color } }),\n          Bodies.circle(cx - Math.sin(angle) * h / 2, cy + Math.cos(angle) * h / 2, w / 2, { render: { fillStyle: color } })\n        );\n      }\n      return Body.create({ parts, restitution: 0.7, friction: 0.3 });\n    };\n\n    shapes.push(starParts(600, -500, 4, 210, '#FE6E3D'));\n    shapes.push(starParts(1000, -500, 19, 210, '#4284F3'));\n\n    const walls = [\n      Bodies.rectangle(-50, window.innerHeight / 2, 100, window.innerHeight, { isStatic: true, render: { visible: false } }),\n      Bodies.rectangle(window.innerWidth + 50, window.innerHeight / 2, 100, window.innerHeight, { isStatic: true, render: { visible: false } }),\n      Bodies.rectangle(window.innerWidth / 2, window.innerHeight + 50, window.innerWidth, 100, { isStatic: true, render: { visible: false } }),\n    ];\n    World.add(world, [...shapes, ...walls]);\n\n    const mouse = Mouse.create(render.canvas);\n    const mouseConstraint = MouseConstraint.create(engine, {\n      mouse,\n      constraint: { stiffness: 0.2, render: { visible: false } },\n    });\n    World.add(world, mouseConstraint);\n\n    mouse.pixelRatio = render.options.pixelRatio;\n    mouse.element.removeEventListener('wheel', mouse.mousewheel);\n    mouse.element.removeEventListener('DOMMouseScroll', mouse.mousewheel);\n\n    Events.on(engine, 'collisionStart', (event) => {\n      event.pairs.forEach(({ bodyA, bodyB }) => {\n        [bodyA, bodyB].forEach((body) => {\n          const index = shapes.indexOf(body);\n          if (index !== -1 && sounds[index] && sounds[index].paused) {\n            sounds[index].currentTime = 0;\n            sounds[index].play().catch(() => {});\n          }\n        });\n      });\n    });\n\n    Events.on(mouseConstraint, 'mousedown', (event) => {\n      const clickedBody = event.source.body;\n      const index = shapes.indexOf(clickedBody);\n      if (index !== -1 && sounds[index] && sounds[index].paused) {\n        sounds[index].currentTime = 0;\n        sounds[index].play().catch(() => {});\n      }\n    });\n\n    return () => {\n      Render.stop(render);\n      Runner.stop(runner);\n      World.clear(world);\n      Engine.clear(engine);\n      render.canvas.remove();\n    };\n  }, []);\n\n  const handleStart = () => {\n    const runner = runnerRef.current;\n    const engine = engineRef.current;\n\n    setHasStarted(true);\n\n    const sounds = document.querySelectorAll('audio');\n    sounds.forEach((audio) => {\n      audio.play().then(() => {\n        audio.pause();\n        audio.currentTime = 0;\n      }).catch(() => {});\n    });\n\n    Matter.Runner.run(runner, engine);\n  };\n\n  return (\n    <div ref={sceneRef} style={{ width: '100vw', height: '100vh' }} onClick={!hasStarted ? handleStart : undefined}>\n      {!hasStarted && (\n        <div style={{\n          position: 'absolute',\n          top: '60%',\n          left: '80%',\n          transform: 'translate(-50%, -50%)',\n          fontSize: '22px',\n          fontFamily: 'Loos Extended',\n          fontWeight: '400',\n          color: '#333',\n          zIndex: 10,\n          pointerEvents: 'none',\n          opacity: hasStarted ? 0 : 1,\n          transition: 'opacity 1s ease',\n        }}>Click to Start</div>\n      )}\n    </div>\n  );\n};\n\nexport default MatterScene;\n","import React, { useEffect, useState, useRef } from 'react';\nimport './GallerySection.css';\n\nconst dummyItems = Array.from({ length: 10 }, (_, i) => ({\n  id: i + 1,\n  image: `/img/image 69.png`,\n  composer: `작곡가 ${i + 1}`,\n  likes: 0,\n  comments: [],\n}));\n\nconst GallerySection = () => {\n  const [galleryItems, setGalleryItems] = useState(dummyItems);\n  const [sort, setSort] = useState(\"latest\");\n  const visibleRefs = useRef([]);\n  const [visibleIds, setVisibleIds] = useState([]);\n  const [clickedId, setClickedId] = useState(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const id = entry.target.dataset.id;\n            setVisibleIds(prev =>\n              prev.includes(id) ? prev : [...prev, id]\n            );\n          }\n        });\n      },\n      { threshold: 0.2 }\n    );\n\n    visibleRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      visibleRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, [galleryItems]);\n\n  const sortedItems = [...galleryItems].sort((a, b) => {\n    if (sort === \"popular\") return b.likes - a.likes;\n    return b.id - a.id;\n  });\n\n  const handleLike = (id) => {\n    setGalleryItems(prev =>\n      prev.map(item =>\n        item.id === id ? { ...item, likes: item.likes + 1 } : item\n      )\n    );\n    setClickedId(id); // 하트 클릭 상태 저장\n\n    setTimeout(() => {\n      setClickedId(null); // 1초 후 원래 색으로 복귀\n    }, 1000);\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <div className=\"sort-buttons\">\n          <button\n            className={`sort-button ${sort === \"latest\" ? \"active\" : \"\"}`}\n            onClick={() => setSort(\"latest\")}\n          >\n            최신순\n          </button>\n          <button\n            className={`sort-button ${sort === \"popular\" ? \"active\" : \"\"}`}\n            onClick={() => setSort(\"popular\")}\n          >\n            인기순\n          </button>\n        </div>\n      </div>\n\n      <div className=\"gallery-grid\">\n        {sortedItems.map((item, index) => (\n          <div\n            key={item.id}\n            data-id={item.id}\n            ref={(el) => (visibleRefs.current[index] = el)}\n            className={`gallery-card ${visibleIds.includes(String(item.id)) ? \"visible\" : \"\"}`}\n            style={{\n              transitionDelay: `${index * 100}ms`,\n            }}\n            onClick={() => console.log(\"재생용 도형 데이터:\", item.shapeData)}\n          >\n            <img src={item.image} alt=\"악보\" />\n            <div className=\"card-footer\">\n              <strong>{item.composer}</strong>\n              <button\n                className={`like-button ${clickedId === item.id ? \"liked\" : \"\"}`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleLike(item.id);\n                }}\n              >\n                ♡ {item.likes}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GallerySection;\n","import React from \"react\";\n\nfunction ComposeSlideSection() {\n  return (\n    <section style={styles.section}>\n      <div style={styles.ellipse}>\n        <svg\n          viewBox=\"0 0 1650 950\"\n          width=\"100%\"\n          height=\"100%\"\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n        >\n          {/* 배경 타원 */}\n          <ellipse\n            cx=\"825\"\n            cy=\"475\"\n            rx=\"800\"\n            ry=\"380\"\n            fill=\"#f7f2ea\"\n          />\n\n          {/* 텍스트 기준 경로 (조금 작아진 타원 경로) */}\n          <path\n            id=\"grayEllipsePath\"\n            d=\"\n              M 75,475\n              A 750,356 0 1,1 1575,475\n              A 750,356 0 1,1 75,475\n            \"\n            fill=\"none\"\n          />\n\n          {/* 텍스트 */}\n          <text\n            fill=\"#333\"\n            fontSize=\"28\"\n            fontFamily=\"Loos Extended\"\n            fontWeight=\"400\"\n            letterSpacing=\"2\"\n          >\n            <textPath\n              href=\"#grayEllipsePath\"\n              startOffset=\"50%\"\n              textAnchor=\"middle\"\n              dominantBaseline=\"hanging\"\n            >\n              <tspan>\n                <tspan fill=\"#F5BC62\">Harmony</tspan>는 <tspan fill=\"#F5BC62\">ElevenLabs</tspan>로 생성한 효과음을 시각적 기호로 정리해, 사용자가 <tspan fill=\"#F5BC62\">기호만으로 직관적이고 창의적으로 작곡</tspan>할 수 있는 인터페이스를 제공합니다.\n              </tspan>\n              <tspan dx=\"80\">\n                <tspan fill=\"#F5BC62\">Elevenlabs</tspan>는 AI 기반 Text to Speech 도구로 <tspan fill=\"#F5BC62\">원하는 효과음과 음성을 생성</tspan>할 수 있습니다.\n              </tspan>\n            </textPath>\n          </text>\n\n        </svg>\n      </div>\n    </section>\n  );\n}\n\nconst styles = {\n  section: {\n    height: \"100vh\",\n    width: \"100vw\",\n    backgroundColor: \"#4285f4\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\",\n    scrollSnapAlign: \"start\",\n  },\n  ellipse: {\n    width: \"165vw\",\n    height: \"95vw\",\n    maxWidth: \"1650px\",\n    maxHeight: \"950px\",\n    backgroundColor: \"transparent\",\n    position: \"relative\",\n  },\n};\n\nexport default ComposeSlideSection;\n","import React from \"react\";\n\nfunction LastSection() {\n  return (\n    <section style={styles.section}>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"0 0 1920 900\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        style={styles.svg}\n      >\n        {/* 큰 원 */}\n        <circle cx=\"900\" cy=\"450\" r=\"350\" fill=\"#FE6E3D\" />\n\n        {/* 오른쪽쪽 원 */}\n        <circle cx=\"1300\" cy=\"250\" r=\"250\" fill=\"#F7F2EA\" />\n\n        {/* 오른쪽 원 기준 텍스트 경로 */}\n        <path\n          id=\"textCirclePath\"\n          d=\"M 1100,250 a 200,200 0 1,1 399,0 a 200,200 0 1,1 -399,0\"\n          fill=\"none\"\n        />\n\n        <text\n          fontSize=\"22\"\n          fill=\"#FE6E3D\"\n          fontFamily=\"Loos Extended\"\n          letterSpacing=\"1\"\n        >\n          <textPath href=\"#textCirclePath\" startOffset=\"50%\" textAnchor=\"middle\">\n            소리를 그리는 작곡가 Anthony Braxton은 다양한 소리를 시각적 도형으로 분류해, 실험적이고 논리적인 방식으로 작곡했습니다. 그의 방식처럼, 소리를 직관적으로 다룰 수 있는 창의적인 인터페이스를 개발하고자 했습니다. 이 프로젝트는 Anthony Braxton의 음악 기호화 체계에서 영감을 받았습니다.\n          </textPath>\n        </text>\n\n        {/* 왼쪽 상단 점 두 개 */}\n        <circle cx=\"50\" cy=\"80\" r=\"14\" fill=\"#FE6E3D\" />\n        <circle cx=\"50\" cy=\"130\" r=\"14\" fill=\"#FE6E3D\" />\n\n        {/* 왼쪽 하단 직선 하나 */}\n        <rect x=\"40\" y=\"800\" width=\"14\" height=\"60\" fill=\"#FE6E3D\" />\n      </svg>\n\n      {/* 회전 이미지 */}\n      <img\n        src=\"/img/ab.png\"\n        alt=\"Anthony Braxton\"\n        style={{\n          position: \"absolute\",\n          top: \"350px\",\n          left: \"200px\",\n          width: \"400px\",\n          animation: \"spin 10s linear infinite\", // 🔄 애니메이션\n          transformOrigin: \"center center\",\n        }}\n      />\n\n      {/* 인라인 키프레임 정의 */}\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n    </section>\n  );\n}\n\nconst styles = {\n  section: {\n    width: \"100vw\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    padding: 0,\n    margin: 0,\n  },\n  svg: {\n    display: \"block\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n};\n\nexport default LastSection;\n","import React, { useEffect, useRef, useState } from 'react';\nimport SoundPatternBuilder from './SoundPatternBuilder';\nimport MatterScene from './components/MatterScene';\nimport GallerySection from './components/GallerySection';\nimport ComposeSlideSection from './components/ComposeSlideSection';\nimport LastSection from \"./components/LastSection\";\n\nfunction App() {\n  const audioRef = useRef(null);\n  const matterRef = useRef(null);\n  const soundRef = useRef(null);\n  const slideRef = useRef(null);\n\n  const [isMatterVisible, setIsMatterVisible] = useState(false);\n  const [isSoundVisible, setIsSoundVisible] = useState(false);\n  const [isSlideVisible, setIsSlideVisible] = useState(false);\n\n  // 공통 오디오 효과\n  useEffect(() => {\n    audioRef.current = new Audio(\"/sound/for_site/typewriter.mp3\");\n    audioRef.current.volume = 0.5;\n\n    const playSound = () => {\n      if (!audioRef.current) return;\n      audioRef.current.currentTime = 0;\n      audioRef.current.play().catch((e) => console.error(\"오디오 재생 실패:\", e));\n    };\n\n    const handleWheel = () => playSound();\n    const handleClick = () => playSound();\n\n    window.addEventListener(\"wheel\", handleWheel);\n    window.addEventListener(\"click\", handleClick);\n\n    return () => {\n      window.removeEventListener(\"wheel\", handleWheel);\n      window.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n\n  // IntersectionObserver로 섹션 감지\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIsMatterVisible(entry.isIntersecting),\n      { threshold: 0.1 }\n    );\n    if (matterRef.current) observer.observe(matterRef.current);\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIsSoundVisible(entry.isIntersecting),\n      { threshold: 0.1 }\n    );\n    if (soundRef.current) observer.observe(soundRef.current);\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n  const observer = new IntersectionObserver(\n    ([entry]) => setIsSlideVisible(entry.isIntersecting),\n    { threshold: 0.1 }\n  );\n  if (slideRef.current) observer.observe(slideRef.current);\n  return () => observer.disconnect();\n}, []);\n\n  return (\n    <div className=\"container\">\n      <nav className=\"navbar\">\n        <ul>\n          <li><a href=\"#section1\">Home</a></li>\n          <li><a href=\"#section3\">Composite</a></li>\n          <li><a href=\"#section4\">Gallery</a></li>\n          <li><a href=\"#section5\">Anthony Braxton</a></li>\n        </ul>\n      </nav>\n\n      {/* 첫 번째 화면 */}\n      <section\n        className=\"section\"\n        id=\"section1\"\n        style={{\n          position: 'relative',\n          height: '100vh',\n          overflow: 'hidden',\n        }}\n        ref={matterRef}\n      >\n        <MatterScene isVisible={isMatterVisible} />\n\n        <h1\n          style={{\n            position: 'absolute',\n            top: '5vh',\n            left: 0,\n            width: '100%',\n            height: '40vh',\n            overflow: 'hidden',\n            margin: 0,\n            padding: 0,\n            zIndex: 2,\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <div className=\"marquee\">\n            <div className=\"marquee-content\">\n              {[...Array(10)].map((_, idx) => (\n                <span key={idx} style={{ display: 'inline-block', marginRight: '0vw' }}>\n                  <span style={{ color: '#FE6E3D', fontFamily: 'Loos ExtraWide', fontWeight: 400 }}>H</span>\n                  <span style={{ color: '#000000', fontFamily: 'Loos Extended', fontWeight: 400 }}>a</span>\n                  <span style={{ color: '#6EC1A1', fontFamily: 'Loos ExtraWide', fontWeight: 500 }}>r</span>\n                  <span style={{ color: '#F5BC62', fontFamily: 'Loos ExtraWide', fontWeight: 300 }}>m</span>\n                  <span style={{ color: '#4284F3', fontFamily: 'Loos ExtraWide', fontWeight: 700 }}>o</span>\n                  <span style={{ color: '#000000', fontFamily: 'Loos ExtraWide', fontWeight: 300 }}>n</span>\n                  <span style={{ color: '#EF7A88', fontFamily: 'Loos ExtraWide', fontWeight: 500 }}>y</span>\n                </span>\n              ))}\n            </div>\n          </div>\n        </h1>\n      </section>\n\n    {/* 두 번째 화면 */}\n<section\n  id=\"section2\"\n  ref={slideRef}\n  style={{\n    backgroundColor: \"#4285f4\",\n  }}\n>\n  <div>\n    <ComposeSlideSection isVisible={isSlideVisible} />\n  </div>\n</section>\n\n\n      {/* 세 번째 화면 */}\n      <section className=\"section\" id=\"section3\" ref={soundRef}>\n        <div className=\"content\">\n          <SoundPatternBuilder isVisible={isSoundVisible} />\n        </div>\n      </section>\n\n      {/* 네 번째 화면 */}\n      <section\n  className=\"section\"\n  id=\"section4\"\n  style={{\n    height: '100vh',\n    overflowY: 'auto',\n    paddingTop: '40%', // 헤더 높이만큼 조절 (필요에 따라 더 늘려도 돼)\n    backgroundColor: \"#6EC1A1\",\n  }}\n>\n  <div className=\"content\">\n    <GallerySection />\n  </div>\n</section>\n\n      {/* 다섯 번째 화면 */}\n      <section className=\"section\" id=\"section5\"\n       style={{\n    backgroundColor: \"#F7F2EA\",\n    height: \"100vh\",\n    width: \"100vw\",     // ✨ 전체 너비 확보\n    margin: 0,           // ✨ 여백 제거\n    padding: 0,          // ✨ 여백 제거\n    overflow: \"hidden\",  // ✨ 내부 넘침 방지\n  }} >\n        <div className=\"content\">\n          <LastSection /> {/* ✅ 이 부분만 추가해주면 돼 */}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}